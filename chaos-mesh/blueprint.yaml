tosca_definitions_version: cloudify_dsl_1_4

description: Deploys Chaos Mesh using the official Helm chart.

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-helm-plugin
  - plugin:cloudify-kubernetes-plugin

inputs:
  kubernetes_api_endpoint:
    type: string
    display_label: Kubernetes API Endpoint
    default: { get_environment_capability: kubernetes_cluster_host }

  kubernetes_token:
    type: string
    display_label: Kubernetes Service Account Token
    default: { get_environment_capability: token }

  kubernetes_ca_cert:
    type: string
    display_label: Kubernetes CA Certificate
    default: { get_environment_capability: ssl_ca_cert }

  helm_client_config:
    display_label: Helm plugin client configuration
    hidden: true
    description: >
     Configuration for Helm client. Can be left at default values.
    default:
      configuration:
        api_options:
          host: { get_input: kubernetes_api_endpoint }
          api_key: { get_input: kubernetes_token }
          ssl_ca_cert: { get_input: kubernetes_ca_cert }

node_templates:
  helm_install:
    type: cloudify.nodes.helm.Binary
    properties:
      use_existing_resource: false
      installation_source: 'https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz'

  chaos_mesh_repo:
    type: cloudify.nodes.helm.Repo
    properties:
      resource_config:
        name: chaos-mesh
        repo_url: https://charts.chaos-mesh.org
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host

  namespace:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      client_config: { get_input: helm_client_config }
      file:
        resource_path: manifests/namespace.yaml

  chaos_mesh_release:
    type: cloudify.nodes.helm.Release
    properties:
      client_config: { get_input: helm_client_config }
      resource_config:
        name: chaos-mesh
        chart: chaos-mesh/chaos-mesh
        flags:
          - name: namespace
            value: chaos-mesh
        set_values:
          - name: chaosDaemon.runtime
            value: containerd
          - name: chaosDaemon.socketPath
            value: /run/containerd/containerd.sock
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host
      - target: chaos_mesh_repo
        type: cloudify.relationships.depends_on
      - target: namespace
        type: cloudify.relationships.contained_in

  dashboard_rbac:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      client_config: { get_input: helm_client_config }
      file:
        resource_path: manifests/rbac.yaml
    relationships:
      - target: namespace
        type: cloudify.relationships.contained_in

capabilities:

  dashboard_rbac_name:
    description: Name for RBAC account for Chaos Dashboard
    value: role-cluster-manager-demo

  dashboard_rbac_token_secret:
    description: Secret for RBAC token for Chaos Dashboard
    value: { get_attribute: [ dashboard_rbac, kubernetes, "manifests/rbac.yaml#0", secrets, 0, name ] }
